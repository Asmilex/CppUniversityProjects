#Nombre del ejecutable 
TARGET = 

#Directorios
SRCDIR = src
INCDIR = include
OBJDIR = obj
BINDIR = bin
ZIPDIR = zip 

#Documentación
DOCDIR = doc 
DOCFILE = Doxyfile

#Compilador
CC = g++
LINKER = g++ -o 

#Parámetros
LFLAGS = -Wall -I. -lm
CFLAGS = -std=c++11 -Wall -I$(INCDIR)

#Listado de ficheros
SOURCES := $(wildcard $(SRCDIR)/*.cpp)
INCLUDES := $(wildcard $(INCDIR)/*.cpp)
OBJECTS := $(SOURCES:$(SRCDIR)/*.cpp=$(OBJDIR)/%.o)
DEPS = $(SOURCES:$(SRCDIR)/%.cpp=$(OBJDIR)/%.dep)

build: depend $(BINDIR)/$(TARGET)
depend: $(DEPS)

$(OBJDIR)/%.dep : $(SRCDIR)/%.cpp
	@echo Genero dependencias para $@
	$(CC) $(CFLAGS) -MM $< > $@ #genero las dependencias
	sed ’1s/ˆ/$(OBJDIR)\//’ $@ > $(OBJDIR)/temp #incluyo prefijo del director
	mv $(OBJDIR)/temp $@

$(BINDIR)/$(TARGET): $(OBJECTS)
	@echo objetivo: $@ dependencias $ˆ
	$(LINKER) $@ $(LFLAGS) $(OBJECTS)
	@echo "Linkado completado!"

$(OBJDIR)/%.o : $(SRCDIR)/%.cpp
	@echo "objetivo $@ :: dependencias $ˆ"
	$(CC) $(CFLAGS) -c $< -o $@
	@echo "Compilamos "$<" con exito!"

.PHONY: clean
clean:
	rm -rf $(OBJDIR)/*
	rm -rf $(BINDIR)/$(TARGET)
	rm -rf $(ZIPDIR)/$(TARGET).zip
	@echo "Borrado ficheros!!"

zip: clean
	@echo "Generando ZIP del proyecto " $(TARGET)
	zip -r $(ZIPDIR)/$(TARGET).zip *
doxy:
	@echo "Generando documentacion. Se asume fichero $(DOCFILE) en directorio
	doxygen $(DOCDIR)/$(DOCFILE)

-include $(DEPS)

